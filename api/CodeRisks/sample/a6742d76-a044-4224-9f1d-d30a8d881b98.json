{"items":[{"id":null,"type":"Ip","filePath":"pkg/kube/inject/inject_test.go","language":"Go","finding":"10.96.0.3","lineContent":"\t\t\t\t`values.global.proxy.excludeIPRanges=10.96.0.2/24,10.96.0.3/24`,","line":101,"column":55},{"id":null,"type":"File","filePath":"cni/pkg/install-cni/pkg/constants/constants.go","language":"Go","finding":"\"/var/run/secrets/kubernetes.io/serviceaccount\"","lineContent":"\tServiceAccountPath    = \"/var/run/secrets/kubernetes.io/serviceaccount\"","line":39,"column":26},{"id":null,"type":"Domain","filePath":"pkg/url/url_test.go","language":"Go","finding":"","lineContent":"\tassert.Equal(t, SetupURL, \"https://istio.io/\"+DocsVersion+\"/docs/setup/\", \"setup url should be equal\")","line":32,"column":1},{"id":null,"type":"ApiKey","filePath":"operator/pkg/apis/istio/fixup_structs/main.go","language":"Go","finding":"Token  = \"// GOTYPE:\"","lineContent":"\tgoTypeToken  = \"// GOTYPE:\"","line":54,"column":8},{"id":null,"type":"UserId","filePath":"pilot/pkg/serviceregistry/kube/controller/controller_test.go","language":"Go","finding":"UID:             \"istio://nsa/services/svc1\",","lineContent":"\t\t\t\t\t\tUID:             \"istio://nsa/services/svc1\",","line":412,"column":7},{"id":null,"type":"Password","filePath":"istioctl/pkg/multicluster/remote_secret_test.go","language":"Go","finding":"Server: \"server\"","lineContent":"\t\t\t\t\t\"cluster\": {Server: \"server\"},","line":161,"column":18},{"id":null,"type":"PrivateKey","filePath":"security/pkg/pki/util/crypto_test.go","language":"Go","finding":"-----BEGIN EC PRIVATE KEY-----","lineContent":"-----BEGIN EC PRIVATE KEY-----","line":84,"column":1},{"id":null,"type":"Ip","filePath":"pilot/pkg/networking/core/v1alpha3/cluster_builder_test.go","language":"Go","finding":"192.168.1.1","lineContent":"\t\t\t\t\t\t\t\t\t\t\t\tAddress: \"192.168.1.1\",","line":1037,"column":23},{"id":null,"type":"File","filePath":"pilot/cmd/pilot-discovery/main.go","language":"Go","finding":"\"/etc/istio/config/meshNetworks\"","lineContent":"\tdiscoveryCmd.PersistentFlags().StringVar(&serverArgs.NetworksConfigFile, \"networksConfig\", \"/etc/istio/config/meshNetworks\",","line":118,"column":93},{"id":null,"type":"Domain","filePath":"pkg/url/url_test.go","language":"Go","finding":"","lineContent":"\tassert.Equal(t, DocsURL, \"https://istio.io/\"+DocsVersion+\"/docs/\", \"docs url should be equal\")","line":30,"column":1}],"paging":null}