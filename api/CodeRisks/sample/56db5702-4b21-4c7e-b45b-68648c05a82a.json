{"items":[{"id":null,"type":"Ip","filePath":"src/Middleware/HttpOverrides/test/ForwardedHeadersMiddlewareTest.cs","language":"C#","finding":"172.123.142.121","lineContent":"[InlineData(\"22.33.44.55,::ffff:172.123.142.121\", \"::ffff:172.123.142.121\", \"\", \"22.33.44.55\")]","line":1000,"column":33},{"id":null,"type":"File","filePath":"src/Http/Routing/test/UnitTests/DefaultLinkGeneratorProcessTemplateTest.cs","language":"C#","finding":"\"/home/index\"","lineContent":"Assert.Equal(\"/home/index\", result.path.ToUriComponent());","line":616,"column":14},{"id":null,"type":"Domain","filePath":"src/SignalR/server/SignalR/test/WebSocketsTransportTests.cs","language":"C#","finding":"","lineContent":"webSocketsTransport.StartAsync(new Uri(\"http://fakeuri.org\"), transferFormat));","line":184,"column":1},{"id":null,"type":"ApiKey","filePath":"src/Http/Headers/src/SetCookieHeaderValue.cs","language":"C#","finding":"Token = \"secure\";","lineContent":"private const string SecureToken = \"secure\";","line":27,"column":28},{"id":null,"type":"UserId","filePath":"src/Antiforgery/test/DefaultAntiforgeryTokenGeneratorTest.cs","language":"C#","finding":"Username = \"THE-USER\",","lineContent":"Username = \"THE-USER\",","line":550,"column":1},{"id":null,"type":"Password","filePath":"src/Mvc/Mvc.Core/test/ModelBinding/Validation/DefaultObjectValidatorTests.cs","language":"C#","finding":"Password == \"password\"","lineContent":"if (Password == \"password\")","line":1611,"column":5},{"id":null,"type":"Ip","filePath":"src/Middleware/HttpOverrides/test/ForwardedHeadersMiddlewareTest.cs","language":"C#","finding":"22.33.44.55","lineContent":"[InlineData(\"22.33.44.55,::ffff:172.123.142.121\", \"::ffff:172.123.142.121\", \"\", \"22.33.44.55\")]","line":1000,"column":14},{"id":null,"type":"File","filePath":"src/Installers/Debian/tools/build.sh","language":"Bourne Shell","finding":"\"/usr/share/$PACKAGE_NAME\"","lineContent":"INSTALL_ROOT=\"/usr/share/$PACKAGE_NAME\"","line":143,"column":14},{"id":null,"type":"Domain","filePath":"src/SignalR/clients/csharp/Client/test/UnitTests/ServerSentEventsTransportTests.cs","language":"C#","finding":"","lineContent":"var ex = await Assert.ThrowsAsync<ArgumentException>(() => sseTransport.StartAsync(new Uri(\"http://fakeuri.org\"), TransferFormat.Binary).OrTimeout());","line":378,"column":1},{"id":null,"type":"ApiKey","filePath":"src/Http/Headers/src/SetCookieHeaderValue.cs","language":"C#","finding":"Token = \"samesite\";","lineContent":"private const string SameSiteToken = \"samesite\";","line":29,"column":30}],"paging":null}