{"items":[{"id":null,"type":"Ip","filePath":"src/Middleware/HttpOverrides/test/ForwardedHeadersMiddlewareTest.cs","language":"C#","finding":"11.111.111.11","lineContent":"[InlineData(2, \"12.112.112.12:23456, 11.111.111.11:12345\", \"12.112.112.12\", 23456, \"\", false)]","line":99,"column":38},{"id":null,"type":"File","filePath":"src/Servers/IIS/AspNetCoreModuleV2/CommonLibTests/dotnet_exe_path_tests.cpp","language":"C++","finding":"\"C:/Program Files/dotnet\"","lineContent":"std::filesystem::path knownDotnetLocation=L\"C:/Program Files/dotnet\";","line":26,"column":44},{"id":null,"type":"Domain","filePath":"eng/common/post-build/publish-using-darc.ps1","language":"PowerShell","finding":"","lineContent":"[Parameter(Mandatory=$false)][string] $MaestroApiEndPoint = 'https://maestro-prod.westus2.cloudapp.azure.com',","line":6,"column":1},{"id":null,"type":"ApiKey","filePath":"src/SignalR/clients/csharp/Client/test/UnitTests/HttpConnectionTests.Negotiate.cs","language":"C#","finding":"Token = \"different-id\",","lineContent":"connectionToken = \"different-id\",","line":216,"column":11},{"id":null,"type":"UserId","filePath":"src/Identity/test/Identity.Test/UserClaimsPrincipalFactoryTest.cs","language":"C#","finding":"UserName = \"Foo\", Email = \"foo@bar.com\"","lineContent":"var user = new PocoUser { UserName = \"Foo\", Email = \"foo@bar.com\" };","line":50,"column":27},{"id":null,"type":"Password","filePath":"src/Components/Web.JS/src/Platform/WebAssemblyConfigLoader.ts","language":"TypeScript","finding":"credentials: 'include',","lineContent":"credentials: 'include',","line":21,"column":1},{"id":null,"type":"Ip","filePath":"src/Middleware/HttpOverrides/test/ForwardedHeadersMiddlewareTest.cs","language":"C#","finding":"12.112.112.12","lineContent":"[InlineData(2, \"12.112.112.12:23456, 11.111.111.11:12345\", \"12.112.112.12\", 23456, \"\", false)]","line":99,"column":17},{"id":null,"type":"File","filePath":"src/Servers/Kestrel/Core/test/AddressBinderTests.cs","language":"C#","finding":"\"c:/foo/bar/pipe.socket\"","lineContent":"Assert.Equal(\"c:/foo/bar/pipe.socket\", listenOptions.SocketPath);","line":96,"column":14},{"id":null,"type":"Domain","filePath":"eng/helix/content/installnode.sh","language":"Bourne Shell","finding":"","lineContent":"url=\"http://nodejs.org/dist/v$node_version/node-v$node_version-$platformarch.tar.gz\"","line":22,"column":1},{"id":null,"type":"ApiKey","filePath":"src/SignalR/clients/csharp/Client/test/UnitTests/HttpConnectionTests.Negotiate.cs","language":"C#","finding":"Token = \"different-id\",","lineContent":"connectionToken = \"different-id\",","line":176,"column":11}],"paging":null}