{"items":[{"id":null,"type":"Ip","filePath":"src/Middleware/Rewrite/test/PatternSegments/LocalAddressSegmentTests.cs","language":"C#","finding":"20.30.40.50","lineContent":"context.HttpContext.Connection.LocalIpAddress = IPAddress.Parse(\"20.30.40.50\");","line":20,"column":66},{"id":null,"type":"File","filePath":"src/Identity/ApiAuthorization.IdentityServer/test/Configuration/SigningKeysLoaderTests.cs","language":"C#","finding":"'c:/inexistent.json' and creation of a development key was not requested.\"","lineContent":"Assert.Equal(\"Couldn't find the file 'c:/inexistent.json' and creation of a development key was not requested.\", exception.Message);","line":134,"column":38},{"id":null,"type":"Domain","filePath":"src/SignalR/clients/java/signalr/test/src/main/java/com/microsoft/signalr/HubConnectionTest.java","language":"Java","finding":"","lineContent":"Throwable exception = assertThrows(IllegalStateException.class, () -> hubConnection.setBaseUrl(\"http://newurl.com\"));","line":175,"column":1},{"id":null,"type":"ApiKey","filePath":"src/Http/Headers/src/SetCookieHeaderValue.cs","language":"C#","finding":"Token = \"httponly\";","lineContent":"private const string HttpOnlyToken = \"httponly\";","line":34,"column":30},{"id":null,"type":"UserId","filePath":"src/Mvc/Mvc.Core/test/Routing/PageLinkGeneratorExtensionsTest.cs","language":"C#","finding":"user = \"jamesnk\", query = \"some?query\"","lineContent":"values: new RouteValueDictionary(new { user = \"jamesnk\", query = \"some?query\" }),","line":69,"column":40},{"id":null,"type":"Password","filePath":"src/Identity/EntityFrameworkCore/test/EF.Test/UserOnlyTest.cs","language":"C#","finding":"password = \"1qaz@WSX\";","lineContent":"const string password = \"1qaz@WSX\";","line":77,"column":14},{"id":null,"type":"Ip","filePath":"src/Middleware/Rewrite/test/PatternSegments/IsIPV6SegmentTests.cs","language":"C#","finding":"20.30.40.50","lineContent":"context.HttpContext.Connection.RemoteIpAddress = IPAddress.Parse(\"20.30.40.50\");","line":50,"column":67},{"id":null,"type":"File","filePath":"src/Identity/ApiAuthorization.IdentityServer/test/Configuration/SigningKeysLoaderTests.cs","language":"C#","finding":"\"c:/inexistent.json\"","lineContent":"var exception = Assert.Throws<InvalidOperationException>(() => SigningKeysLoader.LoadDevelopment(\"c:/inexistent.json\", createIfMissing: false));","line":133,"column":98},{"id":null,"type":"Domain","filePath":"src/SignalR/clients/java/signalr/test/src/main/java/com/microsoft/signalr/HubConnectionTest.java","language":"Java","finding":"","lineContent":"assertEquals(\"http://newurl.com\", hubConnection.getBaseUrl());","line":160,"column":1},{"id":null,"type":"ApiKey","filePath":"src/Http/Headers/src/SetCookieHeaderValue.cs","language":"C#","finding":"Token = \"samesite\";","lineContent":"private const string SameSiteToken = \"samesite\";","line":29,"column":30}],"paging":null}