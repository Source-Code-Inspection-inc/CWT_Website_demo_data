{"items":[{"id":null,"type":"Ip","filePath":"test/units/module_utils/facts/network/test_generic_bsd.py","language":"Python","finding":"192.168.122.205","lineContent":"NETBSD_EXPECTED = {'all_ipv4_addresses': ['192.168.122.205'],","line":71,"column":44},{"id":null,"type":"File","filePath":"lib/ansible/module_utils/facts/hardware/sunos.py","language":"Python","finding":"'/usr/bin/kstat -p unix:0:system_misc:boot_time'","lineContent":"rc, out, err = self.module.run_command('/usr/bin/kstat -p unix:0:system_misc:boot_time')","line":272,"column":40},{"id":null,"type":"Domain","filePath":"test/units/cli/test_galaxy.py","language":"Python","finding":"","lineContent":"assert mock_install.call_args[0][2][0].api_server == 'https://galaxy.ansible.com'","line":889,"column":1},{"id":null,"type":"ApiKey","filePath":"lib/ansible/galaxy/token.py","language":"Python","finding":"token = \"%s:%s\" % (to_text(username, errors='surrogate_or_strict'","lineContent":"token = \"%s:%s\" % (to_text(username, errors='surrogate_or_strict'),","line":168,"column":1},{"id":null,"type":"UserId","filePath":"test/units/module_utils/basic/test_exit_json.py","language":"Python","finding":"username='person'","lineContent":"invocation=dict(module_args=dict(password=OMIT, token=None, username='person'))),","line":133,"column":61},{"id":null,"type":"Password","filePath":"test/units/module_utils/urls/test_fetch_url.py","language":"Python","finding":"password='passwd', url_username='user',","lineContent":"http_agent='ansible-test', last_mod_time=None, method=None, timeout=10, url_password='passwd', url_username='user',","line":91,"column":77},{"id":null,"type":"Ip","filePath":"test/units/module_utils/facts/network/test_generic_bsd.py","language":"Python","finding":"192.168.122.205","lineContent":"'ipv4': [{'address': '192.168.122.205',","line":89,"column":23},{"id":null,"type":"File","filePath":"lib/ansible/module_utils/facts/hardware/sunos.py","language":"Python","finding":"'/usr/bin/kstat', '-p'","lineContent":"cmd = ['/usr/bin/kstat', '-p']","line":240,"column":8},{"id":null,"type":"Domain","filePath":"test/units/cli/test_galaxy.py","language":"Python","finding":"","lineContent":"assert mock_install.call_args[0][2][0].api_server == 'https://galaxy.ansible.com'","line":861,"column":1},{"id":null,"type":"ApiKey","filePath":"test/units/galaxy/test_api.py","language":"Python","finding":"token='my_token'","lineContent":"api = GalaxyAPI(None, \"test\", \"https://galaxy.ansible.com/api/\", token=GalaxyToken(token='my_token'))","line":229,"column":84}],"paging":null}