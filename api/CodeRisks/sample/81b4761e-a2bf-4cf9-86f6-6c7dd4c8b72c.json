{"items":[{"id":null,"type":"Ip","filePath":"test/units/utils/test_version.py","language":"Python","finding":"1.2.31.2","lineContent":"\"1.2.31.2.3----RC-SNAPSHOT.12.09.1--..12+788\",","line":136,"column":2},{"id":null,"type":"File","filePath":"test/units/playbook/test_included_file.py","language":"Python","finding":"'/etc/ansible/roles/foo_role/tasks/task2.yml': \"\"\"","lineContent":"'/etc/ansible/roles/foo_role/tasks/task2.yml': \"\"\"","line":232,"column":1},{"id":null,"type":"Domain","filePath":"test/units/galaxy/test_api.py","language":"Python","finding":"","lineContent":"('https://testing.com:1234', 'testing.com:1234'),","line":1038,"column":1},{"id":null,"type":"ApiKey","filePath":"test/units/module_utils/basic/test_heuristic_log_sanitize.py","language":"Python","finding":"token=\"secret\", user=\"person\", token_entry=\"test=secret\"', frozenset(['secret'","lineContent":"output = heuristic_log_sanitize('token=\"secret\", user=\"person\", token_entry=\"test=secret\"', frozenset(['secret']))","line":88,"column":34},{"id":null,"type":"UserId","filePath":"docs/docsite/rst/conf.py","language":"Python","finding":"user': 'ansible',","lineContent":"'github_user': 'ansible',","line":144,"column":9},{"id":null,"type":"Password","filePath":"lib/ansible/module_utils/distro/_distro.py","language":"Python","finding":"server': 'oracle',","lineContent":"'enterpriseenterpriseserver': 'oracle',  # Oracle Linux 5","line":66,"column":22},{"id":null,"type":"Ip","filePath":"test/units/modules/test_iptables.py","language":"Python","finding":"192.168.1.100","lineContent":"'src_range': '192.168.1.100-192.168.1.199',","line":748,"column":15},{"id":null,"type":"File","filePath":"test/units/playbook/test_included_file.py","language":"Python","finding":"'/etc/ansible/roles/foo_role/tasks/task1.yml': \"\"\"","lineContent":"'/etc/ansible/roles/foo_role/tasks/task1.yml': \"\"\"","line":229,"column":1},{"id":null,"type":"Domain","filePath":"test/units/galaxy/test_api.py","language":"Python","finding":"","lineContent":"('https://testing.com:invalid', 'testing.com:'),","line":1037,"column":1},{"id":null,"type":"ApiKey","filePath":"test/units/galaxy/test_token.py","language":"Python","finding":"token=\"explicit\").get() == \"explicit\"","lineContent":"assert GalaxyToken(token=\"explicit\").get() == \"explicit\"","line":36,"column":20}],"paging":null}