{"items":[{"id":null,"type":"Ip","filePath":"test/units/module_utils/facts/network/test_generic_bsd.py","language":"Python","finding":"192.168.122.205","lineContent":"'ipv4': [{'address': '192.168.122.205',","line":89,"column":23},{"id":null,"type":"File","filePath":"lib/ansible/module_utils/facts/network/hpux.py","language":"Python","finding":"\"/usr/bin/netstat -ni\"","lineContent":"rc, out, err = self.module.run_command(\"/usr/bin/netstat -ni\")","line":63,"column":40},{"id":null,"type":"Domain","filePath":"test/units/cli/test_galaxy.py","language":"Python","finding":"","lineContent":"assert mock_install.call_args[0][2][0].api_server == 'https://galaxy.ansible.com'","line":894,"column":1},{"id":null,"type":"ApiKey","filePath":"test/units/executor/test_task_executor.py","language":"Python","finding":"token = 'POPCORN'","lineContent":"omit_token = 'POPCORN'","line":429,"column":6},{"id":null,"type":"UserId","filePath":"test/units/playbook/test_play_context.py","language":"Python","finding":"user = 'mocktask'","lineContent":"mock_task.remote_user = 'mocktask'","line":68,"column":18},{"id":null,"type":"Password","filePath":"test/units/playbook/test_play_context.py","language":"Python","finding":"connection = 'mocktask'","lineContent":"mock_task.connection = 'mocktask'","line":67,"column":11},{"id":null,"type":"Ip","filePath":"test/units/module_utils/facts/network/test_generic_bsd.py","language":"Python","finding":"192.168.122.205","lineContent":"NETBSD_EXPECTED = {'all_ipv4_addresses': ['192.168.122.205'],","line":71,"column":44},{"id":null,"type":"File","filePath":"lib/ansible/module_utils/facts/network/hpux.py","language":"Python","finding":"\"/usr/bin/netstat -nr\"","lineContent":"rc, out, err = self.module.run_command(\"/usr/bin/netstat -nr\")","line":50,"column":40},{"id":null,"type":"Domain","filePath":"test/units/cli/test_galaxy.py","language":"Python","finding":"","lineContent":"assert mock_install.call_args[0][2][0].api_server == 'https://galaxy.ansible.com'","line":866,"column":1},{"id":null,"type":"ApiKey","filePath":"test/units/galaxy/test_token.py","language":"Python","finding":"token=\"explicit\").get() == \"explicit\"","lineContent":"assert GalaxyToken(token=\"explicit\").get() == \"explicit\"","line":36,"column":20}],"paging":null}