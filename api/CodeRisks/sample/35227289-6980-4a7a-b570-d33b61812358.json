{"items":[{"id":null,"type":"Ip","filePath":"test/units/modules/test_iptables.py","language":"Python","finding":"192.168.0.1","lineContent":"'-s', '192.168.0.1/32',","line":948,"column":8},{"id":null,"type":"File","filePath":"lib/ansible/modules/sysvinit.py","language":"Python","finding":"'/usr/sbin', '/bin', '/usr/bin'","lineContent":"paths = ['/sbin', '/usr/sbin', '/bin', '/usr/bin']","line":160,"column":19},{"id":null,"type":"Domain","filePath":"test/units/galaxy/test_collection_install.py","language":"Python","finding":"","lineContent":"broken_server.api_server = 'https://broken.com/'","line":471,"column":1},{"id":null,"type":"ApiKey","filePath":"test/units/module_utils/basic/test_heuristic_log_sanitize.py","language":"Python","finding":"token=\"secret\", user=\"person\", token_entry=\"test=secret\"', frozenset(['secret'","lineContent":"output = heuristic_log_sanitize('token=\"secret\", user=\"person\", token_entry=\"test=secret\"', frozenset(['secret']))","line":88,"column":34},{"id":null,"type":"UserId","filePath":"test/units/module_utils/basic/test_exit_json.py","language":"Python","finding":"username='person'","lineContent":"invocation=dict(module_args=dict(password=OMIT, token=None, username='person'))),","line":117,"column":61},{"id":null,"type":"Password","filePath":"test/integration/targets/vault/test-vault-client.py","language":"Python","finding":"password': 'test-vault-password',","lineContent":"secrets = {'vault-password': 'test-vault-password',","line":15,"column":19},{"id":null,"type":"Ip","filePath":"test/units/modules/test_iptables.py","language":"Python","finding":"192.168.0.1","lineContent":"'source': '192.168.0.1/32',","line":927,"column":12},{"id":null,"type":"File","filePath":"lib/ansible/module_utils/facts/hardware/aix.py","language":"Python","finding":"\"/usr/sbin/lsattr -El sys0 -a fwversion\"","lineContent":"rc, out, err = self.module.run_command(\"/usr/sbin/lsattr -El sys0 -a fwversion\")","line":116,"column":40},{"id":null,"type":"Domain","filePath":"test/units/galaxy/test_collection_install.py","language":"Python","finding":"","lineContent":"galaxy_api = api.GalaxyAPI(None, 'test_server', 'https://galaxy.ansible.com')","line":170,"column":1},{"id":null,"type":"ApiKey","filePath":"test/units/galaxy/test_token.py","language":"Python","finding":"token=\"explicit\").get() == \"explicit\"","lineContent":"assert GalaxyToken(token=\"explicit\").get() == \"explicit\"","line":41,"column":20}],"paging":null}