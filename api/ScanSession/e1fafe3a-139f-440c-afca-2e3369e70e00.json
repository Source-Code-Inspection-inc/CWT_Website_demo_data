{"id":"e1fafe3a-139f-440c-afca-2e3369e70e00","startTime":"2020-12-22T13:08:59.6543969","endTime":"2020-12-22T13:17:00.4621328","productName":"istio","totalLinesOfCode":399555,"isRunning":false,"isDiagnosticsFinished":true,"isFullAnalysisFinished":true,"durationSeconds":480,"remainingSeconds":null,"estimatedTotalTimeSeconds":null,"isConfirmed":false,"techStacks":[{"language":"Gradle","files":4,"code":41,"comments":0,"blanks":8,"testCoveragePercentage":null,"languageType":"BuildScript"},{"language":"HTML","files":4,"code":4007,"comments":58,"blanks":319,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"JavaScript","files":5,"code":1809,"comments":229,"blanks":605,"testCoveragePercentage":null,"languageType":"Code"},{"language":"JSON","files":49,"code":34218,"comments":0,"blanks":162,"testCoveragePercentage":null,"languageType":"Configuration"},{"language":"Markdown","files":58,"code":3204,"comments":0,"blanks":1141,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"CSS","files":4,"code":7368,"comments":22,"blanks":7,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"YAML","files":845,"code":90306,"comments":3878,"blanks":1350,"testCoveragePercentage":null,"languageType":"Configuration"},{"language":"Dockerfile","files":11,"code":104,"comments":139,"blanks":47,"testCoveragePercentage":null,"languageType":"Code"},{"language":"XML","files":3,"code":30,"comments":22,"blanks":14,"testCoveragePercentage":null,"languageType":"Configuration"},{"language":"Ruby","files":2,"code":125,"comments":44,"blanks":32,"testCoveragePercentage":null,"languageType":"Code"},{"language":"Go","files":1404,"code":244668,"comments":38888,"blanks":32159,"testCoveragePercentage":null,"languageType":"Code"},{"language":"Python","files":6,"code":563,"comments":206,"blanks":178,"testCoveragePercentage":null,"languageType":"Code"},{"language":"make","files":15,"code":1184,"comments":413,"blanks":354,"testCoveragePercentage":null,"languageType":"BuildScript"},{"language":"SQL","files":1,"code":11,"comments":0,"blanks":2,"testCoveragePercentage":null,"languageType":"Code"},{"language":"Protocol Buffers","files":157,"code":8745,"comments":20208,"blanks":5238,"testCoveragePercentage":null,"languageType":"Configuration"},{"language":"SVG","files":3,"code":290,"comments":0,"blanks":0,"testCoveragePercentage":null,"languageType":"Unknown"},{"language":"Bourne Shell","files":62,"code":2692,"comments":1375,"blanks":654,"testCoveragePercentage":null,"languageType":"Code"},{"language":"Java","files":6,"code":190,"comments":100,"blanks":38,"testCoveragePercentage":null,"languageType":"Code"}],"jobs":[{"name":"Tech Stack Filtering","startTime":"2020-12-22T13:09:06.7960122","endTime":"2020-12-22T13:09:07.2395579","status":"Success","statusText":"2369 files included, 270 skipped","isRunning":false,"durationSeconds":0},{"name":"License Compliance","startTime":"2020-12-22T13:10:26.2117679","endTime":"2020-12-22T13:17:00.4320178","status":"Success","statusText":"Detected 13 unique licenses","isRunning":false,"durationSeconds":394},{"name":"Tech Stack","startTime":"2020-12-22T13:08:59.8754008","endTime":"2020-12-22T13:09:05.0405113","status":"Success","statusText":"Scanned 2639 files","isRunning":false,"durationSeconds":5},{"name":"Static Code Analysis","startTime":"2020-12-22T13:09:16.0194317","endTime":"2020-12-22T13:10:26.1810869","status":"Error","statusText":"Exception in pipeline job CodeWeTrust.Core.SonarQube.SonarQubeJob: System.Exception: Container exited with code 64:   \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.Transmitter.newExchange(Transmitter.java:169)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.RealCall.getResponseWithInterceptorChain(RealCall.java:221)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.RealCall.execute(RealCall.java:81)\r\n      \tat org.sonarsource.scanner.api.internal.ServerConnection.callUrl(ServerConnection.java:114)\r\n      \tat org.sonarsource.scanner.api.internal.ServerConnection.downloadString(ServerConnection.java:99)\r\n      \tat org.sonarsource.scanner.api.internal.BootstrapIndexDownloader.getIndex(BootstrapIndexDownloader.java:39)\r\n      \t... 10 more\r\n      ERROR: \r\n      ERROR: Re-run SonarScanner using the -X switch to enable full debug logging.\r\n[13:10:23]\u001B[41m\u001B[30mfail\u001B[39m\u001B[22m\u001B[49m: CodeWeTrust.Scanner.ScannerHostedService[0]\r\n      Scan failed: Result: IsSuccess='False', Reasons='Error with Message='Project scan failed: INFO: ------------------------------------------------------------------------\r\n      ERROR: Error during SonarScanner execution\r\n      org.sonarsource.scanner.api.internal.ScannerException: Unable to execute SonarScanner analysis\r\n      \tat org.sonarsource.scanner.api.internal.IsolatedLauncherFactory.lambda$createLauncher$0(IsolatedLauncherFactory.java:85)\r\n      \tat java.base/java.security.AccessController.doPrivileged(Native Method)\r\n      \tat org.sonarsource.scanner.api.internal.IsolatedLauncherFactory.createLauncher(IsolatedLauncherFactory.java:74)\r\n      \tat org.sonarsource.scanner.api.internal.IsolatedLauncherFactory.createLauncher(IsolatedLauncherFactory.java:70)\r\n      \tat org.sonarsource.scanner.api.EmbeddedScanner.doStart(EmbeddedScanner.java:185)\r\n      \tat org.sonarsource.scanner.api.EmbeddedScanner.start(EmbeddedScanner.java:123)\r\n      \tat org.sonarsource.scanner.cli.Main.execute(Main.java:73)\r\n      \tat org.sonarsource.scanner.cli.Main.main(Main.java:61)\r\n      Caused by: java.lang.IllegalStateException: Fail to get bootstrap index from server\r\n      \tat org.sonarsource.scanner.api.internal.BootstrapIndexDownloader.getIndex(BootstrapIndexDownloader.java:42)\r\n      \tat org.sonarsource.scanner.api.internal.JarDownloader.getScannerEngineFiles(JarDownloader.java:58)\r\n      \tat org.sonarsource.scanner.api.internal.JarDownloader.download(JarDownloader.java:53)\r\n      \tat org.sonarsource.scanner.api.internal.IsolatedLauncherFactory.lambda$createLauncher$0(IsolatedLauncherFactory.java:76)\r\n      \t... 7 more\r\n      Caused by: java.net.SocketTimeoutException: connect timed out\r\n      \tat java.base/java.net.PlainSocketImpl.socketConnect(Native Method)\r\n      \tat java.base/java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)\r\n      \tat java.base/java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)\r\n      \tat java.base/java.net.AbstractPlainSocketImpl.connect(Unknown Source)\r\n      \tat java.base/java.net.SocksSocketImpl.connect(Unknown Source)\r\n      \tat java.base/java.net.Socket.connect(Unknown Source)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.platform.Platform.connectSocket(Platform.java:130)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.RealConnection.connectSocket(RealConnection.java:263)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.RealConnection.connect(RealConnection.java:183)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:224)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.Transmitter.newExchange(Transmitter.java:169)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.RealCall.getResponseWithInterceptorChain(RealCall.java:221)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.RealCall.execute(RealCall.java:81)\r\n      \tat org.sonarsource.scanner.api.internal.ServerConnection.callUrl(ServerConnection.java:114)\r\n      \tat org.sonarsource.scanner.api.internal.ServerConnection.downloadString(ServerConnection.java:99)\r\n      \tat org.sonarsource.scanner.api.internal.BootstrapIndexDownloader.getIndex(BootstrapIndexDownloader.java:39)\r\n      \t... 10 more\r\n      ERROR: \r\n      ERROR: Re-run SonarScanner using the -X switch to enable full debug logging.''\r\n[13:10:23]\u001B[40m\u001B[32minfo\u001B[39m\u001B[22m\u001B[49m: Microsoft.Hosting.Lifetime[0]\r\n      Application is shutting down...\r\n\n   at CodeWeTrust.Core.Docker.DockerApi.RunAsync(String image, String tag, ImageMode mode, Nullable`1 portBinding, Nullable`1 portBindingHost, IEnumerable`1 env, IEnumerable`1 volumes, Boolean followLog, Boolean waitForExit) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/Docker/DockerApi.cs:line 142\n   at CodeWeTrust.Core.SonarQube.SonarQubeJob.ScanProjectAsync(PipelineContext context, String projectName, SonarQubeApiToken token, DockerContainer server) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/SonarQube/SonarQubeJob.cs:line 257\n   at CodeWeTrust.Core.SonarQube.SonarQubeJob.RunAsync(PipelineContext context) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/SonarQube/SonarQubeJob.cs:line 100\n   at CodeWeTrust.Core.SonarQube.SonarQubeJob.RunAsync(PipelineContext context) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/SonarQube/SonarQubeJob.cs:line 182\n   at CodeWeTrust.Core.SonarQube.SonarQubeJob.RunAsync(PipelineContext context) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/SonarQube/SonarQubeJob.cs:line 182\n   at CodeWeTrust.Core.Pipeline.PipelineRunner.RunJobAsync(IPipelineJob job, PipelineContext context, IPipelineProgress progress, IReadOnlyCollection`1 jobsToRun) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/Pipeline/PipelineRunner.cs:line 284","isRunning":false,"durationSeconds":70},{"name":"Code Risks","startTime":"2020-12-22T13:09:05.0658521","endTime":"2020-12-22T13:09:06.7887786","status":"Success","statusText":"Processed 2639 files","isRunning":false,"durationSeconds":1},{"name":"Hardcoded Analysis","startTime":"2020-12-22T13:09:07.2469742","endTime":"2020-12-22T13:09:15.9963634","status":"Success","statusText":"Detected 908 findings","isRunning":false,"durationSeconds":8}],"businessRisks":[{"category":"Code Quality","type":"Defects","grade":"Excellent","transcript":"0.0% code lines (0 of 360962) contain major issues"},{"category":"Code Quality","type":"Code Smells","grade":"Excellent","transcript":"0.0% code lines (0 of 360962) contain blocker code smells"},{"category":"Code Quality","type":"Duplications","grade":"Excellent","transcript":"0.0% code lines (0 of 360962) are duplicated"},{"category":"Code Quality","type":"Hardcoded Items","grade":"Excellent","transcript":"0.1% code lines (401 of 360962) contain hardcoded items"},{"category":"Security","type":"Vulnerabilities","grade":"Excellent","transcript":"0 vulnerabilities"},{"category":"Security","type":"Security Hotspots","grade":"Excellent","transcript":"0 security hotspots"},{"category":"License Compliance","type":"License Compliance","grade":"Satisfactory","transcript":"4 reciprocal license risks, 94 total license risks"}]}