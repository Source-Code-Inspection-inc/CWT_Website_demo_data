{"id":"9a03bc7a-b944-4dbe-bf03-52fd57a06f66","startTime":"2020-12-22T13:53:39.588562","endTime":"2020-12-22T13:56:54.239284","productName":"gatsby","totalLinesOfCode":752933,"isRunning":false,"isDiagnosticsFinished":true,"isFullAnalysisFinished":true,"durationSeconds":194,"remainingSeconds":null,"estimatedTotalTimeSeconds":null,"isConfirmed":false,"techStacks":[{"language":"Stylus","files":2,"code":101,"comments":4,"blanks":39,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"Sass","files":6,"code":148,"comments":2,"blanks":8,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"GraphQL","files":3,"code":528,"comments":2,"blanks":62,"testCoveragePercentage":null,"languageType":"Configuration"},{"language":"Bourne Shell","files":13,"code":163,"comments":23,"blanks":47,"testCoveragePercentage":null,"languageType":"Code"},{"language":"Handlebars","files":11,"code":108,"comments":0,"blanks":12,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"HTML","files":11,"code":1155,"comments":17,"blanks":101,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"Markdown","files":949,"code":91310,"comments":0,"blanks":48206,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"TypeScript","files":535,"code":46572,"comments":6649,"blanks":6640,"testCoveragePercentage":null,"languageType":"Code"},{"language":"YAML","files":19,"code":1477,"comments":22,"blanks":67,"testCoveragePercentage":null,"languageType":"Configuration"},{"language":"TOML","files":1,"code":8,"comments":8,"blanks":3,"testCoveragePercentage":null,"languageType":"Code"},{"language":"CSS","files":78,"code":20034,"comments":188,"blanks":940,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"JavaScript","files":2337,"code":245832,"comments":32988,"blanks":40046,"testCoveragePercentage":null,"languageType":"Code"},{"language":"Dockerfile","files":2,"code":16,"comments":9,"blanks":8,"testCoveragePercentage":null,"languageType":"Code"},{"language":"JSX","files":2,"code":12,"comments":0,"blanks":2,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"JSON5","files":1,"code":2054,"comments":220,"blanks":0,"testCoveragePercentage":null,"languageType":"Configuration"},{"language":"JSON","files":450,"code":342857,"comments":0,"blanks":0,"testCoveragePercentage":null,"languageType":"Configuration"},{"language":"Python","files":1,"code":3,"comments":5,"blanks":1,"testCoveragePercentage":null,"languageType":"Code"},{"language":"EJS","files":1,"code":17,"comments":0,"blanks":0,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"AsciiDoc","files":3,"code":216,"comments":18,"blanks":85,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"SVG","files":13,"code":322,"comments":0,"blanks":0,"testCoveragePercentage":null,"languageType":"Unknown"}],"jobs":[{"name":"License Compliance","startTime":"2020-12-22T13:55:11.3888027","endTime":"2020-12-22T13:56:54.2092499","status":"Success","statusText":"Detected 14 unique licenses","isRunning":false,"durationSeconds":102},{"name":"Code Risks","startTime":"2020-12-22T13:53:50.4446542","endTime":"2020-12-22T13:53:53.3742851","status":"Success","statusText":"Processed 4438 files","isRunning":false,"durationSeconds":2},{"name":"Static Code Analysis","startTime":"2020-12-22T13:54:00.0432052","endTime":"2020-12-22T13:55:11.37239","status":"Error","statusText":"Exception in pipeline job CodeWeTrust.Core.SonarQube.SonarQubeJob: System.Exception: Container exited with code 64:   \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.Transmitter.newExchange(Transmitter.java:169)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.RealCall.getResponseWithInterceptorChain(RealCall.java:221)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.RealCall.execute(RealCall.java:81)\r\n      \tat org.sonarsource.scanner.api.internal.ServerConnection.callUrl(ServerConnection.java:114)\r\n      \tat org.sonarsource.scanner.api.internal.ServerConnection.downloadString(ServerConnection.java:99)\r\n      \tat org.sonarsource.scanner.api.internal.BootstrapIndexDownloader.getIndex(BootstrapIndexDownloader.java:39)\r\n      \t... 10 more\r\n      ERROR: \r\n      ERROR: Re-run SonarScanner using the -X switch to enable full debug logging.\r\n[13:55:08]\u001B[41m\u001B[30mfail\u001B[39m\u001B[22m\u001B[49m: CodeWeTrust.Scanner.ScannerHostedService[0]\r\n      Scan failed: Result: IsSuccess='False', Reasons='Error with Message='Project scan failed: INFO: ------------------------------------------------------------------------\r\n      ERROR: Error during SonarScanner execution\r\n      org.sonarsource.scanner.api.internal.ScannerException: Unable to execute SonarScanner analysis\r\n      \tat org.sonarsource.scanner.api.internal.IsolatedLauncherFactory.lambda$createLauncher$0(IsolatedLauncherFactory.java:85)\r\n      \tat java.base/java.security.AccessController.doPrivileged(Native Method)\r\n      \tat org.sonarsource.scanner.api.internal.IsolatedLauncherFactory.createLauncher(IsolatedLauncherFactory.java:74)\r\n      \tat org.sonarsource.scanner.api.internal.IsolatedLauncherFactory.createLauncher(IsolatedLauncherFactory.java:70)\r\n      \tat org.sonarsource.scanner.api.EmbeddedScanner.doStart(EmbeddedScanner.java:185)\r\n      \tat org.sonarsource.scanner.api.EmbeddedScanner.start(EmbeddedScanner.java:123)\r\n      \tat org.sonarsource.scanner.cli.Main.execute(Main.java:73)\r\n      \tat org.sonarsource.scanner.cli.Main.main(Main.java:61)\r\n      Caused by: java.lang.IllegalStateException: Fail to get bootstrap index from server\r\n      \tat org.sonarsource.scanner.api.internal.BootstrapIndexDownloader.getIndex(BootstrapIndexDownloader.java:42)\r\n      \tat org.sonarsource.scanner.api.internal.JarDownloader.getScannerEngineFiles(JarDownloader.java:58)\r\n      \tat org.sonarsource.scanner.api.internal.JarDownloader.download(JarDownloader.java:53)\r\n      \tat org.sonarsource.scanner.api.internal.IsolatedLauncherFactory.lambda$createLauncher$0(IsolatedLauncherFactory.java:76)\r\n      \t... 7 more\r\n      Caused by: java.net.SocketTimeoutException: connect timed out\r\n      \tat java.base/java.net.PlainSocketImpl.socketConnect(Native Method)\r\n      \tat java.base/java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)\r\n      \tat java.base/java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)\r\n      \tat java.base/java.net.AbstractPlainSocketImpl.connect(Unknown Source)\r\n      \tat java.base/java.net.SocksSocketImpl.connect(Unknown Source)\r\n      \tat java.base/java.net.Socket.connect(Unknown Source)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.platform.Platform.connectSocket(Platform.java:130)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.RealConnection.connectSocket(RealConnection.java:263)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.RealConnection.connect(RealConnection.java:183)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:224)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.Transmitter.newExchange(Transmitter.java:169)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.RealCall.getResponseWithInterceptorChain(RealCall.java:221)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.RealCall.execute(RealCall.java:81)\r\n      \tat org.sonarsource.scanner.api.internal.ServerConnection.callUrl(ServerConnection.java:114)\r\n      \tat org.sonarsource.scanner.api.internal.ServerConnection.downloadString(ServerConnection.java:99)\r\n      \tat org.sonarsource.scanner.api.internal.BootstrapIndexDownloader.getIndex(BootstrapIndexDownloader.java:39)\r\n      \t... 10 more\r\n      ERROR: \r\n      ERROR: Re-run SonarScanner using the -X switch to enable full debug logging.''\r\n[13:55:08]\u001B[40m\u001B[32minfo\u001B[39m\u001B[22m\u001B[49m: Microsoft.Hosting.Lifetime[0]\r\n      Application is shutting down...\r\n\n   at CodeWeTrust.Core.Docker.DockerApi.RunAsync(String image, String tag, ImageMode mode, Nullable`1 portBinding, Nullable`1 portBindingHost, IEnumerable`1 env, IEnumerable`1 volumes, Boolean followLog, Boolean waitForExit) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/Docker/DockerApi.cs:line 142\n   at CodeWeTrust.Core.SonarQube.SonarQubeJob.ScanProjectAsync(PipelineContext context, String projectName, SonarQubeApiToken token, DockerContainer server) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/SonarQube/SonarQubeJob.cs:line 257\n   at CodeWeTrust.Core.SonarQube.SonarQubeJob.RunAsync(PipelineContext context) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/SonarQube/SonarQubeJob.cs:line 100\n   at CodeWeTrust.Core.SonarQube.SonarQubeJob.RunAsync(PipelineContext context) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/SonarQube/SonarQubeJob.cs:line 182\n   at CodeWeTrust.Core.SonarQube.SonarQubeJob.RunAsync(PipelineContext context) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/SonarQube/SonarQubeJob.cs:line 182\n   at CodeWeTrust.Core.Pipeline.PipelineRunner.RunJobAsync(IPipelineJob job, PipelineContext context, IPipelineProgress progress, IReadOnlyCollection`1 jobsToRun) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/Pipeline/PipelineRunner.cs:line 284","isRunning":false,"durationSeconds":71},{"name":"Hardcoded Analysis","startTime":"2020-12-22T13:53:53.8370204","endTime":"2020-12-22T13:54:00.0303934","status":"Success","statusText":"Detected 1418 findings","isRunning":false,"durationSeconds":6},{"name":"Tech Stack","startTime":"2020-12-22T13:53:39.7985482","endTime":"2020-12-22T13:53:50.4184219","status":"Success","statusText":"Scanned 4438 files","isRunning":false,"durationSeconds":10},{"name":"Tech Stack Filtering","startTime":"2020-12-22T13:53:53.3810249","endTime":"2020-12-22T13:53:53.8303005","status":"Success","statusText":"2260 files included, 2178 skipped","isRunning":false,"durationSeconds":0}],"businessRisks":[{"category":"Code Quality","type":"Defects","grade":"Excellent","transcript":"0.0% code lines (0 of 240436) contain major issues"},{"category":"Code Quality","type":"Code Smells","grade":"Excellent","transcript":"0.0% code lines (0 of 240436) contain blocker code smells"},{"category":"Code Quality","type":"Duplications","grade":"Excellent","transcript":"0.0% code lines (0 of 240436) are duplicated"},{"category":"Code Quality","type":"Hardcoded Items","grade":"Excellent","transcript":"0.0% code lines (119 of 240436) contain hardcoded items"},{"category":"Security","type":"Vulnerabilities","grade":"Excellent","transcript":"0 vulnerabilities"},{"category":"Security","type":"Security Hotspots","grade":"Excellent","transcript":"0 security hotspots"},{"category":"License Compliance","type":"License Compliance","grade":"Satisfactory","transcript":"0 reciprocal license risks, 81 total license risks"}]}