{"id":"9c00c4e6-eb77-4dee-9ccd-9fa9d8b67383","startTime":"2020-12-22T13:50:51.4099083","endTime":"2020-12-22T13:53:32.7715894","productName":"storybook","totalLinesOfCode":147510,"isRunning":false,"isDiagnosticsFinished":true,"isFullAnalysisFinished":true,"durationSeconds":161,"remainingSeconds":null,"estimatedTotalTimeSeconds":null,"isConfirmed":false,"techStacks":[{"language":"TypeScript","files":1161,"code":89513,"comments":2809,"blanks":9805,"testCoveragePercentage":null,"languageType":"Code"},{"language":"Kotlin","files":1,"code":422,"comments":16,"blanks":89,"testCoveragePercentage":null,"languageType":"Code"},{"language":"Pug","files":41,"code":133,"comments":0,"blanks":7,"testCoveragePercentage":null,"languageType":"Code"},{"language":"Markdown","files":557,"code":26935,"comments":0,"blanks":11161,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"Bourne Shell","files":3,"code":42,"comments":28,"blanks":16,"testCoveragePercentage":null,"languageType":"Code"},{"language":"JavaScript","files":674,"code":20379,"comments":1811,"blanks":3159,"testCoveragePercentage":null,"languageType":"Code"},{"language":"EJS","files":2,"code":52,"comments":0,"blanks":10,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"JSON","files":198,"code":7299,"comments":0,"blanks":0,"testCoveragePercentage":null,"languageType":"Configuration"},{"language":"Vuejs Component","files":11,"code":521,"comments":49,"blanks":50,"testCoveragePercentage":null,"languageType":"Code"},{"language":"CSS","files":19,"code":374,"comments":1,"blanks":48,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"SVG","files":14,"code":14,"comments":0,"blanks":0,"testCoveragePercentage":null,"languageType":"Unknown"},{"language":"Svelte","files":12,"code":432,"comments":0,"blanks":76,"testCoveragePercentage":null,"languageType":"Unknown"},{"language":"TOML","files":1,"code":13,"comments":0,"blanks":0,"testCoveragePercentage":null,"languageType":"Code"},{"language":"YAML","files":15,"code":771,"comments":14,"blanks":28,"testCoveragePercentage":null,"languageType":"Configuration"},{"language":"Handlebars","files":4,"code":62,"comments":0,"blanks":1,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"XML","files":1,"code":101,"comments":0,"blanks":6,"testCoveragePercentage":null,"languageType":"Configuration"},{"language":"JSX","files":1,"code":29,"comments":0,"blanks":3,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"HTML","files":22,"code":403,"comments":77,"blanks":40,"testCoveragePercentage":null,"languageType":"Markup"},{"language":"Sass","files":4,"code":15,"comments":1,"blanks":3,"testCoveragePercentage":null,"languageType":"Markup"}],"jobs":[{"name":"Tech Stack Filtering","startTime":"2020-12-22T13:50:56.8131814","endTime":"2020-12-22T13:50:57.2764961","status":"Success","statusText":"2541 files included, 200 skipped","isRunning":false,"durationSeconds":0},{"name":"Code Risks","startTime":"2020-12-22T13:50:54.9832267","endTime":"2020-12-22T13:50:56.806621","status":"Success","statusText":"Processed 2741 files","isRunning":false,"durationSeconds":1},{"name":"Tech Stack","startTime":"2020-12-22T13:50:51.6243229","endTime":"2020-12-22T13:50:54.9583642","status":"Success","statusText":"Scanned 2741 files","isRunning":false,"durationSeconds":3},{"name":"Static Code Analysis","startTime":"2020-12-22T13:51:01.7216314","endTime":"2020-12-22T13:52:13.5780051","status":"Error","statusText":"Exception in pipeline job CodeWeTrust.Core.SonarQube.SonarQubeJob: System.Exception: Container exited with code 64: .java:224)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.Transmitter.newExchange(Transmitter.java:169)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.RealCall.getResponseWithInterceptorChain(RealCall.java:221)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.RealCall.execute(RealCall.java:81)\r\n      \tat org.sonarsource.scanner.api.internal.ServerConnection.callUrl(ServerConnection.java:114)\r\n      \tat org.sonarsource.scanner.api.internal.ServerConnection.downloadString(ServerConnection.java:99)\r\n      \tat org.sonarsource.scanner.api.internal.BootstrapIndexDownloader.getIndex(BootstrapIndexDownloader.java:39)\r\n      \t... 10 more\r\n      ERROR: \r\n      ERROR: Re-run SonarScanner using the -X switch to enable full debug logging.\r\n[13:52:10]\u001B[41m\u001B[30mfail\u001B[39m\u001B[22m\u001B[49m: CodeWeTrust.Scanner.ScannerHostedService[0]\r\n      Scan failed: Result: IsSuccess='False', Reasons='Error with Message='Project scan failed: org.sonarsource.scanner.api.internal.ScannerException: Unable to execute SonarScanner analysis\r\n      \tat org.sonarsource.scanner.api.internal.IsolatedLauncherFactory.lambda$createLauncher$0(IsolatedLauncherFactory.java:85)\r\n      \tat java.base/java.security.AccessController.doPrivileged(Native Method)\r\n      \tat org.sonarsource.scanner.api.internal.IsolatedLauncherFactory.createLauncher(IsolatedLauncherFactory.java:74)\r\n      \tat org.sonarsource.scanner.api.internal.IsolatedLauncherFactory.createLauncher(IsolatedLauncherFactory.java:70)\r\n      \tat org.sonarsource.scanner.api.EmbeddedScanner.doStart(EmbeddedScanner.java:185)\r\n      \tat org.sonarsource.scanner.api.EmbeddedScanner.start(EmbeddedScanner.java:123)\r\n      \tat org.sonarsource.scanner.cli.Main.execute(Main.java:73)\r\n      \tat org.sonarsource.scanner.cli.Main.main(Main.java:61)\r\n      Caused by: java.lang.IllegalStateException: Fail to get bootstrap index from server\r\n      \tat org.sonarsource.scanner.api.internal.BootstrapIndexDownloader.getIndex(BootstrapIndexDownloader.java:42)\r\n      \tat org.sonarsource.scanner.api.internal.JarDownloader.getScannerEngineFiles(JarDownloader.java:58)\r\n      \tat org.sonarsource.scanner.api.internal.JarDownloader.download(JarDownloader.java:53)\r\n      \tat org.sonarsource.scanner.api.internal.IsolatedLauncherFactory.lambda$createLauncher$0(IsolatedLauncherFactory.java:76)\r\n      \t... 7 more\r\n      Caused by: java.net.SocketTimeoutException: connect timed out\r\n      INFO: Final Memory: 2M/14M\r\n      INFO: ------------------------------------------------------------------------\r\n      \tat java.base/java.net.PlainSocketImpl.socketConnect(Native Method)\r\n      \tat java.base/java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)\r\n      \tat java.base/java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)\r\n      \tat java.base/java.net.AbstractPlainSocketImpl.connect(Unknown Source)\r\n      \tat java.base/java.net.SocksSocketImpl.connect(Unknown Source)\r\n      \tat java.base/java.net.Socket.connect(Unknown Source)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.platform.Platform.connectSocket(Platform.java:130)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.RealConnection.connectSocket(RealConnection.java:263)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.RealConnection.connect(RealConnection.java:183)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:224)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.Transmitter.newExchange(Transmitter.java:169)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.RealCall.getResponseWithInterceptorChain(RealCall.java:221)\r\n      \tat org.sonarsource.scanner.api.internal.shaded.okhttp.RealCall.execute(RealCall.java:81)\r\n      \tat org.sonarsource.scanner.api.internal.ServerConnection.callUrl(ServerConnection.java:114)\r\n      \tat org.sonarsource.scanner.api.internal.ServerConnection.downloadString(ServerConnection.java:99)\r\n      \tat org.sonarsource.scanner.api.internal.BootstrapIndexDownloader.getIndex(BootstrapIndexDownloader.java:39)\r\n      \t... 10 more\r\n      ERROR: \r\n      ERROR: Re-run SonarScanner using the -X switch to enable full debug logging.''\r\n[13:52:10]\u001B[40m\u001B[32minfo\u001B[39m\u001B[22m\u001B[49m: Microsoft.Hosting.Lifetime[0]\r\n      Application is shutting down...\r\n\n   at CodeWeTrust.Core.Docker.DockerApi.RunAsync(String image, String tag, ImageMode mode, Nullable`1 portBinding, Nullable`1 portBindingHost, IEnumerable`1 env, IEnumerable`1 volumes, Boolean followLog, Boolean waitForExit) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/Docker/DockerApi.cs:line 142\n   at CodeWeTrust.Core.SonarQube.SonarQubeJob.ScanProjectAsync(PipelineContext context, String projectName, SonarQubeApiToken token, DockerContainer server) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/SonarQube/SonarQubeJob.cs:line 257\n   at CodeWeTrust.Core.SonarQube.SonarQubeJob.RunAsync(PipelineContext context) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/SonarQube/SonarQubeJob.cs:line 100\n   at CodeWeTrust.Core.SonarQube.SonarQubeJob.RunAsync(PipelineContext context) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/SonarQube/SonarQubeJob.cs:line 182\n   at CodeWeTrust.Core.SonarQube.SonarQubeJob.RunAsync(PipelineContext context) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/SonarQube/SonarQubeJob.cs:line 182\n   at CodeWeTrust.Core.Pipeline.PipelineRunner.RunJobAsync(IPipelineJob job, PipelineContext context, IPipelineProgress progress, IReadOnlyCollection`1 jobsToRun) in /home/ubuntu/CodeWeTrust/src/CodeWeTrust.Core/Pipeline/PipelineRunner.cs:line 284","isRunning":false,"durationSeconds":71},{"name":"Hardcoded Analysis","startTime":"2020-12-22T13:50:57.2838102","endTime":"2020-12-22T13:51:01.7013842","status":"Success","statusText":"Detected 351 findings","isRunning":false,"durationSeconds":4},{"name":"License Compliance","startTime":"2020-12-22T13:52:13.5940367","endTime":"2020-12-22T13:53:32.7439139","status":"Success","statusText":"Detected 4 unique licenses","isRunning":false,"durationSeconds":79}],"businessRisks":[{"category":"Code Quality","type":"Defects","grade":"Excellent","transcript":"0.0% code lines (0 of 144478) contain major issues"},{"category":"Code Quality","type":"Code Smells","grade":"Excellent","transcript":"0.0% code lines (0 of 144478) contain blocker code smells"},{"category":"Code Quality","type":"Duplications","grade":"Excellent","transcript":"0.0% code lines (0 of 144478) are duplicated"},{"category":"Code Quality","type":"Hardcoded Items","grade":"Excellent","transcript":"0.1% code lines (83 of 144478) contain hardcoded items"},{"category":"Security","type":"Vulnerabilities","grade":"Excellent","transcript":"0 vulnerabilities"},{"category":"Security","type":"Security Hotspots","grade":"Excellent","transcript":"0 security hotspots"},{"category":"License Compliance","type":"License Compliance","grade":"Satisfactory","transcript":"0 reciprocal license risks, 6 total license risks"}]}